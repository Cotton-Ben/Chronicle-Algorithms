measurementTime: 2 secs
# JMH 1.10.3 (released 35 days ago)
# VM version: JDK 1.8.0_51, VM 25.51-b03
# VM invoker: /opt/jdk1.8.0_51/jre/bin/java
# VM options: -Didea.launcher.port=7533 -Didea.launcher.bin.path=/opt/idea-IU-141.1192.2/bin -Dfile.encoding=UTF-8
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: net.openhft.chronicle.algorithms.benchmarks.Main64bytes.vanillaHash

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: n = 22940, mean = 549 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 34, 44, 52, 53, 332, 10624, 1878872, 3063808 ns/op
# Warmup Iteration   2: n = 10995, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 52, 53, 54, 166, 348, 366 ns/op
# Warmup Iteration   3: n = 12307, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 51, 52, 54, 56, 62, 62 ns/op
# Warmup Iteration   4: n = 12207, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 51, 52, 54, 56, 1290, 1634 ns/op
# Warmup Iteration   5: n = 12306, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 51, 52, 54, 56, 121, 127 ns/op
# Warmup Iteration   6: n = 12307, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 51, 52, 54, 56, 103, 113 ns/op
# Warmup Iteration   7: n = 12291, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 50, 52, 54, 56, 80, 83 ns/op
# Warmup Iteration   8: n = 12307, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 51, 52, 54, 57, 97, 98 ns/op
# Warmup Iteration   9: n = 12307, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 51, 52, 54, 56, 66, 68 ns/op
# Warmup Iteration  10: n = 12281, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 51, 52, 54, 59, 145, 153 ns/op
# Warmup Iteration  11: n = 12307, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 43, 51, 52, 54, 57, 90, 96 ns/op
# Warmup Iteration  12: n = 12307, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 51, 52, 54, 57, 115, 119 ns/op
# Warmup Iteration  13: n = 12307, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 51, 52, 54, 57, 101, 103 ns/op
# Warmup Iteration  14: n = 12306, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 51, 53, 54, 56, 67, 69 ns/op
# Warmup Iteration  15: n = 12306, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 51, 52, 54, 57, 432, 542 ns/op
# Warmup Iteration  16: n = 12307, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 51, 52, 54, 56, 431, 529 ns/op
# Warmup Iteration  17: n = 12307, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 50, 52, 53, 57, 118, 126 ns/op
# Warmup Iteration  18: n = 12307, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 37, 44, 51, 52, 54, 57, 444, 541 ns/op
# Warmup Iteration  19: n = 12303, mean = 45 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 51, 52, 54, 96, 1526, 1946 ns/op
# Warmup Iteration  20: n = 12307, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 35, 43, 50, 52, 54, 57, 66, 67 ns/op
Iteration   1: n = 24610, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 50, 52, 54, 57, 116, 1868 ns/op
Iteration   2: n = 24613, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 39, 43, 51, 52, 54, 57, 62, 74 ns/op
Iteration   3: n = 24614, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 50, 52, 53, 57, 61, 109 ns/op
Iteration   4: n = 24614, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 51, 52, 54, 56, 68, 113 ns/op
Iteration   5: n = 24614, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 50, 52, 53, 57, 325, 3936 ns/op
Iteration   6: n = 24614, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 50, 52, 53, 57, 66, 71 ns/op
Iteration   7: n = 24615, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 51, 52, 54, 57, 65, 69 ns/op
Iteration   8: n = 24615, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 50, 52, 53, 57, 69, 127 ns/op
Iteration   9: n = 24616, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 51, 52, 54, 57, 113, 117 ns/op
Iteration  10: n = 24617, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 50, 52, 54, 57, 67, 176 ns/op
Iteration  11: n = 24617, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 51, 52, 54, 57, 66, 553 ns/op
Iteration  12: n = 24616, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 50, 52, 53, 56, 68, 112 ns/op
Iteration  13: n = 24616, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 50, 52, 54, 57, 62, 111 ns/op
Iteration  14: n = 24517, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 51, 52, 54, 57, 66, 69 ns/op
Iteration  15: n = 24614, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 44, 51, 52, 54, 57, 105, 107 ns/op
Iteration  16: n = 23335, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 38, 43, 50, 52, 54, 57, 112, 112 ns/op
Iteration  17: n = 24618, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 51, 52, 54, 56, 65, 118 ns/op
Iteration  18: n = 24613, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 51, 52, 54, 57, 62, 530 ns/op
Iteration  19: n = 24616, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 51, 52, 54, 57, 90, 96 ns/op
Iteration  20: n = 24617, mean = 44 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 40, 43, 50, 52, 54, 57, 60, 63 ns/op


Result "vanillaHash":
  44.303 ±(99.9%) 0.033 ns/op [Average]
  (min, avg, max) = (38.000, 44.303, 3936.000), stdev = 6.931
  CI (99.9%): [44.271, 44.336] (assumes normal distribution)
  Samples, N = 490921
        mean =     44.303 ±(99.9%) 0.033 ns/op
         min =     38.000 ns/op
  p( 0.0000) =     38.000 ns/op
  p(50.0000) =     43.000 ns/op
  p(90.0000) =     50.000 ns/op
  p(95.0000) =     52.000 ns/op
  p(99.0000) =     54.000 ns/op
  p(99.9000) =     57.000 ns/op
  p(99.9900) =     69.000 ns/op
  p(99.9990) =    531.543 ns/op
  p(99.9999) =   3936.000 ns/op
         max =   3936.000 ns/op


# Run complete. Total time: 00:01:00

Benchmark                  Mode     Cnt   Score   Error  Units
Main64bytes.vanillaHash  sample  490921  44.303 ± 0.033  ns/op

measurementTime: 2 secs
# JMH 1.10.3 (released 35 days ago)
# VM version: JDK 1.8.0_51, VM 25.51-b03
# VM invoker: /opt/jdk1.8.0_51/jre/bin/java
# VM options: -Didea.launcher.port=7539 -Didea.launcher.bin.path=/opt/idea-IU-141.1192.2/bin -Dfile.encoding=UTF-8
# Warmup: 20 iterations, 1 s each
# Measurement: 20 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: net.openhft.chronicle.algorithms.benchmarks.Main256bytes.vanillaHash

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: n = 22314, mean = 856 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 93, 102, 105, 105, 915, 29905, 2771274, 3522560 ns/op
# Warmup Iteration   2: n = 11689, mean = 202 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 93, 103, 107, 109, 114, 253, 959810, 1153024 ns/op
# Warmup Iteration   3: n = 12360, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 130, 499, 597 ns/op
# Warmup Iteration   4: n = 12259, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 127, 616, 621 ns/op
# Warmup Iteration   5: n = 12358, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 132, 430, 500 ns/op
# Warmup Iteration   6: n = 12363, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 124, 183, 184 ns/op
# Warmup Iteration   7: n = 12359, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 133, 493, 602 ns/op
# Warmup Iteration   8: n = 12360, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 125, 485, 592 ns/op
# Warmup Iteration   9: n = 12360, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 129, 2103, 2216 ns/op
# Warmup Iteration  10: n = 12362, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 122, 134, 3506, 4028 ns/op
# Warmup Iteration  11: n = 12359, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 130, 1437, 1812 ns/op
# Warmup Iteration  12: n = 12360, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 128, 1440, 1700 ns/op
# Warmup Iteration  13: n = 12361, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 133, 1385, 1770 ns/op
# Warmup Iteration  14: n = 12362, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 126, 139, 139 ns/op
# Warmup Iteration  15: n = 12359, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 120, 141, 142 ns/op
# Warmup Iteration  16: n = 12361, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 126, 160, 166 ns/op
# Warmup Iteration  17: n = 12360, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 126, 499, 597 ns/op
# Warmup Iteration  18: n = 12366, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 114, 133, 1718, 1720 ns/op
# Warmup Iteration  19: n = 12363, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 129, 173, 173 ns/op
# Warmup Iteration  20: n = 12361, mean = 105 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 115, 139, 142 ns/op
Iteration   1: n = 24717, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 114, 1102, 1898 ns/op
Iteration   2: n = 24719, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 111, 114, 173, 1722 ns/op
Iteration   3: n = 24720, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 114, 1759, 4480 ns/op
Iteration   4: n = 24721, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 114, 152, 161 ns/op
Iteration   5: n = 24718, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 111, 114, 162, 3996 ns/op
Iteration   6: n = 24724, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 96, 108, 109, 110, 112, 126, 406, 1632 ns/op
Iteration   7: n = 24719, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 111, 114, 389, 2072 ns/op
Iteration   8: n = 24618, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 90, 108, 109, 110, 112, 114, 141, 1850 ns/op
Iteration   9: n = 24722, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 111, 114, 136, 580 ns/op
Iteration  10: n = 24719, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 114, 137, 607 ns/op
Iteration  11: n = 24719, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 114, 148, 168 ns/op
Iteration  12: n = 23185, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 120, 182, 1862 ns/op
Iteration  13: n = 24718, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 124, 160, 6768 ns/op
Iteration  14: n = 24724, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 113, 130, 156, 193 ns/op
Iteration  15: n = 24720, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 111, 114, 382, 1798 ns/op
Iteration  16: n = 24620, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 126, 178, 185 ns/op
Iteration  17: n = 24719, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 133, 210, 1684 ns/op
Iteration  18: n = 24718, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 114, 391, 598 ns/op
Iteration  19: n = 24720, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 114, 160, 164 ns/op
Iteration  20: n = 24722, mean = 106 ns/op, p{0.00, 0.50, 0.90, 0.95, 0.99, 0.999, 0.9999, 1.00} = 97, 108, 109, 110, 112, 127, 138, 185 ns/op


Result "vanillaHash":
  105.642 ±(99.9%) 0.074 ns/op [Average]
  (min, avg, max) = (90.000, 105.642, 6768.000), stdev = 15.855
  CI (99.9%): [105.568, 105.716] (assumes normal distribution)
  Samples, N = 492662
        mean =    105.642 ±(99.9%) 0.074 ns/op
         min =     90.000 ns/op
  p( 0.0000) =     90.000 ns/op
  p(50.0000) =    108.000 ns/op
  p(90.0000) =    109.000 ns/op
  p(95.0000) =    110.000 ns/op
  p(99.0000) =    112.000 ns/op
  p(99.9000) =    124.000 ns/op
  p(99.9900) =    166.201 ns/op
  p(99.9990) =   1910.766 ns/op
  p(99.9999) =   6768.000 ns/op
         max =   6768.000 ns/op


# Run complete. Total time: 00:01:00

Benchmark                   Mode     Cnt    Score   Error  Units
Main256bytes.vanillaHash  sample  492662  105.642 ± 0.074  ns/op
